@model PresentationLayer.Models.DashboardProfileViewModel
@{
	ViewData["Title"] = "Dashboard";
}

<h1 class="mt-4">Dashboard</h1>
<ol class="breadcrumb mb-4">
	<li class="breadcrumb-item active">Dashboard</li>
</ol>

<div class="row">
	<div class="col-xl-6">
		<div class="card mb-4">
			<div class="card-header">
				<i class="fas fa-chart-bar me-1"></i>
				Alış vs Satış Tutarları
			</div>
			<div class="card-body"><canvas id="purchaseSalesChart" width="100%" height="40"></canvas></div>
		</div>
	</div>
	<div class="col-xl-6">
		<div class="card mb-4">
			<div class="card-header">
				<i class="fas fa-address-book me-1"></i>
				Cariler
			</div>
			<div class="card-body">
				@if (Model?.Currents != null && Model.Currents.Any())
				{
					<div class="table-responsive">
						<table class="table table-sm align-middle">
							<thead>
								<tr>
									<th>Ad</th>
									<th class="text-end">Bakiye</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var c in Model.Currents)
								{
									var cls = c.Balance >= 0 ? "text-success" : "text-danger";
									<tr>
										<td>@c.CurrentName</td>
										<td class="text-end @cls">@c.Balance.ToString("N2")</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				}
				else
				{
					<p>Henüz cari bulunamadı.</p>
				}
			</div>
		</div>
	</div>
</div>


@section Styles { }

	@section Scripts {
		<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
		<script>
							document.addEventListener('DOMContentLoaded', function () {

				// Chart: Alış vs Satış
				const ctx = document.getElementById('purchaseSalesChart');
				if (ctx && window.Chart) {
					const purchase = parseFloat('@Model.TotalPurchaseAmount.ToString(System.Globalization.CultureInfo.InvariantCulture)');
					const sales = parseFloat('@Model.TotalSalesAmount.ToString(System.Globalization.CultureInfo.InvariantCulture)');
					new Chart(ctx, {
						type: 'bar',
						data: {
							labels: ['Alış', 'Satış'],
							datasets: [{
								label: 'Tutar (₺)',
								data: [purchase, sales],
								backgroundColor: ['rgba(54, 162, 235, 0.5)', 'rgba(75, 192, 192, 0.5)'],
								borderColor: ['rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)'],
								borderWidth: 1
							}]
						},
						options: {
							responsive: true,
							scales: { y: { beginAtZero: true } }
						}
					});
				}
			});
		</script>
	}
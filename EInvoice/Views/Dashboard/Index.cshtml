@model PresentationLayer.Models.DashboardProfileViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<h1 class="mt-4">Dashboard</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active">Dashboard</li>
</ol>

<div class="row">
    <div class="col-xl-3 col-md-6">
        <div class="card bg-primary text-white mb-4">
            <div class="card-body">Primary Card</div>
            <div class="card-footer d-flex align-items-center justify-content-between">
                <a class="small text-white stretched-link" href="#">View Details</a>
                <div class="small text-white"><i class="fas fa-angle-right"></i></div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card bg-warning text-white mb-4">
            <div class="card-body">Warning Card</div>
            <div class="card-footer d-flex align-items-center justify-content-between">
                <a class="small text-white stretched-link" href="#">View Details</a>
                <div class="small text-white"><i class="fas fa-angle-right"></i></div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card bg-success text-white mb-4">
            <div class="card-body">Success Card</div>
            <div class="card-footer d-flex align-items-center justify-content-between">
                <a class="small text-white stretched-link" href="#">View Details</a>
                <div class="small text-white"><i class="fas fa-angle-right"></i></div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card bg-danger text-white mb-4">
            <div class="card-body">Danger Card</div>
            <div class="card-footer d-flex align-items-center justify-content-between">
                <a class="small text-white stretched-link" href="#">View Details</a>
                <div class="small text-white"><i class="fas fa-angle-right"></i></div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-6">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-area me-1"></i>
                Area Chart Example
            </div>
            <div class="card-body"><canvas id="myAreaChart" width="100%" height="40"></canvas></div>
        </div>
    </div>
    <div class="col-xl-6">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-bar me-1"></i>
                Bar Chart Example
            </div>
            <div class="card-body"><canvas id="myBarChart" width="100%" height="40"></canvas></div>
        </div>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-user me-1"></i>
        Profil Bilgilerim
    </div>
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }
        @if (Model != null)
        {
            <form id="profileForm" asp-action="Update" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="UserId" value="@Model.UserId" />
                <input type="hidden" name="PersonId" value="@Model.PersonId" />

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Ad Soyad</label>
                        <input class="form-control" name="Name" value="@Model.Name" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">TCKN/VKN</label>
                        <input class="form-control" value="@Model.IdentityNumber" readonly />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Vergi Dairesi</label>
                        <input class="form-control" name="TaxOffice" value="@Model.TaxOffice" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Kullanıcı Tipi</label>
                        <input class="form-control" value="@(Model.UserType == 1 ? "Gerçek Kişi" : (Model.UserType == 2 ? "Tüzel Kişi" : "Bilinmiyor"))" readonly />
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Güncelle</button>
            </form>
        }
        else
        {
            <p>Profil bilgileri yüklenemedi.</p>
        }
    </div>
</div>

@section Styles { }

    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const form = document.getElementById('profileForm');
                if (!form) return;
                form.addEventListener('submit', async function (e) {
                    e.preventDefault();

                    const fd = new FormData(form);
                    const tokenEl = form.querySelector('input[name="__RequestVerificationToken"]');
                    const antiForgeryToken = tokenEl ? tokenEl.value : '';

                    try {
                        const response = await fetch(form.action, {
                            method: 'POST',
                            headers: { 'RequestVerificationToken': antiForgeryToken },
                            body: fd
                        });
                        const data = await response.json();
                        const existing = form.parentElement.querySelector('.alert');
                        if (existing) existing.remove();
                        const alert = document.createElement('div');
                        alert.className = 'alert ' + (data.success ? 'alert-success' : 'alert-danger');
                        alert.innerText = data.message || (data.success ? 'Güncellendi' : 'Güncelleme başarısız');
                        form.parentElement.insertBefore(alert, form);
                    } catch (err) {
                        const existing = form.parentElement.querySelector('.alert');
                        if (existing) existing.remove();
                        const alert = document.createElement('div');
                        alert.className = 'alert alert-danger';
                        alert.innerText = 'Beklenmeyen bir hata oluştu.';
                        form.parentElement.insertBefore(alert, form);
                    }
                });
            });
        </script>
    }